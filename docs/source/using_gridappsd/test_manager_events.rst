Test Manager Events
~~~~~~~~~~~~~~~~~~~~~~~

Fault Events in Test Script JSON schema

.. code-block:: JSON

    {
        "faultMRID" : string,
        "equipmentMRID" : string, 
        "phases": string, 
        "PhaseConnectedFaultKind" : string,
        "rGround":double,
        "xGround": double,
        "rLineToLine": double,
        "xLineToLine": double,
        "timeInitiated":long,
        "timeCleared":long
    }
..

Example in test script

.. code-block:: JSON

    {
        "events" : [
            {"faultMRID" : "1233",
            "equipmentMRID" : "12344",
            "phases": "AN",
            "PhaseConnectedFaultKind" : "lineToGround",
            "rGround":0.001,
            "xGround":0.001,
            "rLineToLine":0.0,
            "xLineToLine":0.0,
            "timeInitiated":1248156005,
            "timeCleared":1248156008
            },
            {"faultMRID" : "1234",
            "equipmentMRID" : "12345",
            "phases": "AB",
            "PhaseConnectedFaultKind" : "lineToLine",
            "rGround":0.0,
            "xGround":0.0,
            "rLineToLine":0.001,
            "xLineToLine":0.001,
            "timeInitiated":1248156017,
            "timeCleared":1248156020
            }
        ]
    }
..


Notes on phases

From talking to Tom that the string for phases change be more the just "A". For example it could be:
"AN" A to ground
"AB" would be line to line

And there can be secondary codes:
"S12N" both hot wires to ground
"S12" both hot wires together.
 

PhaseConnectedFaultKind is an enumeration:

1.	lineToGround
2.	lineToLine
3.	lineToLineToGround
4.	lineOpen

Fault Commands sent from the Test Manager to the simulation

Initialize Command:

.. code-block:: JSON

    {
        "command": "update", 
        "input": {
            "timestamp": 1553201000414, 
            "reverse_differences": [], 
            "difference_mrid": "_ee4e4055-222f-4ccf-bed1-93063bd4392c", 
            "forward_differences": [
            {
                "ObjectMRID": "12344", 
                "FaultImpedance": {
                "xLineToLine": 0.0, 
                "rGround": 0.001, 
                "rLineToLine": 0.0, 
                "xGround": 0.001
                }, 
                "FaultMRID": "1233", 
                "PhaseCode": "AN", 
                "PhaseConnectedFaultKind": "lineToGround"
            }
            ]
        }
    }
..

Clear Command

.. code-block:: JSON

    {
        "command": "update", 
        "input": {
            "timestamp": 1553201003561, 
            "reverse_differences": [
            {
                "ObjectMRID": "12344", 
                "FaultImpedance": {
                "xLineToLine": 0.0, 
                "rGround": 0.001, 
                "rLineToLine": 0.0, 
                "xGround": 0.001
                }, 
                "FaultMRID": "1233", 
                "PhaseCode": "AN", 
                "PhaseConnectedFaultKind": "lineToGround"
            }
            ], 
            "difference_mrid": "_00b4668d-8454-4f1c-aed9-42d1424af149", 
            "forward_differences": []
        }
    }
..

Communication Event

Communication Events are separate from the CIM events but we tried to keep pattern of the CIM events and as much commonality as possible. 

For reference this is the complete JSON schema of the internal Communication Event for the platform and goes between the Test Manager and the fncs_goss_bridge.py.

.. code-block:: JSON

    {
        "command":"CommEvent",
        "input":{
            "simulation_id":int,
            "message":{
                "timestamp":long,
                "difference_mrid":String,
                "reverse_differences":[],
                "forward_differences":[{
                    "object":String, - EventID generated by TestManager
                    "attribute":"FilterObject",
                    "value":{
                    "inputList":[ {"ObjectMRID":String,
                                    "attribute":String },...
                                ],
                    "outputList":[MeasurementMRID,...],
                    "filterAllInputs":boolean,
                "filterAllOutputs":boolean,
                    "timeInitiated":long,
                    "timeCleared":long - TestManager
                    }
                },...],
            }
        }
    }
..

Object EventID generated by TestManager

Fields needed in the viz

JSON command to send to the TestManager

.. code-block:: JSON

    {  
        "command":"CommEvent",
        "simulation_id":int,
        "message":{
            "inputList":[ {"ObjectMRID":String,
                        "attribute":String },...
                    ],
            "outputList":[MeasurementMRID,...],
            "filterAllInputs":boolean,
            "filterAllOutputs":boolean,
            "timeInitiated":long,
            "timeCleared":long
        }
    }
..

The inputList is the list of objects that are the ObjectMRID of anything that can be controllable and specific control attribute i.e. "RegulatingControl.mode". 

The outputList is the list of measurements mrids for the simulations. 

If filterAllInputs is True the inputList is not needed.
If filterAllOutputs is True the outputList is not needed.

Update timeInitiated and timeCleared command to Test Manager

.. code-block:: JSON

    {
        "command": "update",
        "input":{
            "simulation_id":int,
            "message":{
                "timestamp":long,
                "difference_mrid":String,
                "reverse_differences":[],
                "forward_differences":[{
                    "object":String, "FaultMRID
                    "attribute":"timeInitiated",
                    "value": 1357048740, or -1 for now
                }]
            }
        }
    }
..

 Command to Test Manager

.. code-block:: JSON

    {  "command": "update",
        "simulation_id",int,
        "object":String, "FaultMRID"
        "attribute":"timeInitiated",
        "value": 1357048740, or -1 for now
    }
..

Command to Test Manager

.. code-block:: JSON

    {  
        "command": "update",
        "simulation_id",int,
        “message”:{
            "object":String, "FaultMRID"
            "attribute":"timeInitiated",
            "value": 1357048740, or -1 for now
        }
    }
..

Query

.. code-block:: JSON

    {"queryMeasurement":"faults", “simulation_id”:int}
..

Result

.. code-block:: JSON

    {   
        “faultMRID" : String,
        "simulation_id": int,
        “faultType:”: String,
        "fault":{ <Object>},    
        "timeInitiated":long,
        "timeCleared":long,
        "status": "scheduled"},  # "scheduled", "inprogress", "cleared"
    }
..

Result CIM Fualt Events

.. code-block:: JSON

    { 
        "results":  [       
            {"faultMRID" : "1233",
            "equipmentMRID" : "12344",
            "phases": "AN",
            "PhaseConnectedFaultKind" : "lineToGround",
            "rGround":0.001,
            "xGround":0.001,
            "rLineToLine":0.0,
            "xLineToLine":0.0,
            "timeInitiated":1248156005,
            "timeCleared":1248156008,
            "status": "scheduled"},  # "scheduled", "inprogress", "cleared"
        ]
    }
..

Or

.. code-block:: JSON

    { "results":  [       
        {"faultMRID" : "1233",
        “event”:{ Complete Fault},
        "timeInitiated":1248156005,
        "timeCleared":1248156008,
        "status": "scheduled"},  # "scheduled", "inprogress", "cleared"
        ]
    }
..

Scheduled Command
Schedule a command for a point in time in the simulation

Command to Test Manager

.. code-block:: JSON

    {
        "command": "update",
        "input":{
            "simulation_id":int,
                "message":{
                "timestamp":long,
                "difference_mrid":String,
                "reverse_differences":[<Object>],
                "forward_differences":[<Object>]
            }
        },
        "timeInitiated":long,
        "timeCleared":long,
    }
..

Example

.. code-block:: JSON

    { 
        "commandToBeScheduled":
        {
            "simulation_id" : 12399999,
            "message" : {
                "timestamp" : "2018-01-08T13:27:00.000Z",
                "difference_mrid" : "123a456b-789c-012d-345e-678f901a235c"
                "reverse_differences" : [
                                {
                                        "object" : "61A547FB-9F68-5635-BB4C-F7F537FD824E",
                                "attribute" : "ShuntCompensator.sections",
                                "value" : "1"
                        }]
                "forward_differences" : [
                                {
                                        "object" : "61A547FB-9F68-5635-BB4C-F7F537FD824E",
                                "attribute" : "ShuntCompensator.sections",
                                "value" : "0"
                        }]
                }
            }
        },
        "timeInitiated":long,
        "timeCleared":long,
    }
..